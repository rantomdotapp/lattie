// import { Token } from '../../types/configs';
// import { AddressZero } from '../constants';
// import ArbitrumTokens from '../tokens/arbitrum.json';
// import AvalancheTokens from '../tokens/avalanche.json';
// import EthereumTokens from '../tokens/ethereum.json';
// import OptimismTokens from '../tokens/optimism.json';
// import PolygonTokens from '../tokens/polygon.json';
//
// export const CoingeckoTokenIds: { [key: string]: Array<Token> } = {
//   ethereum: [
//     {
//       chain: 'ethereum',
//       symbol: 'ETH',
//       decimals: 18,
//       address: AddressZero,
//     },
//     {
//       chain: 'arbitrum',
//       symbol: 'ETH',
//       decimals: 18,
//       address: AddressZero,
//     },
//     {
//       chain: 'optimism',
//       symbol: 'ETH',
//       decimals: 18,
//       address: AddressZero,
//     },
//     EthereumTokens.WETH,
//     PolygonTokens.WETH,
//     AvalancheTokens.WETH,
//     AvalancheTokens['WETH.e'],
//     ArbitrumTokens.WETH,
//     OptimismTokens.WETH,
//   ],
//   aave: [EthereumTokens.AAVE, AvalancheTokens.AAVE, ArbitrumTokens.AAVE, PolygonTokens.AAVE, OptimismTokens.AAVE],
//   'basic-attention-token': [EthereumTokens.BAT],
//   'compound-governance-token': [EthereumTokens.COMP],
//   dai: [EthereumTokens.DAI, AvalancheTokens['DAI.e'], PolygonTokens.DAI, OptimismTokens.DAI, ArbitrumTokens.DAI],
//   // 'fei-usd': [EthereumTokens.FEI],
//   chainlink: [EthereumTokens.LINK, PolygonTokens.LINK, AvalancheTokens.LINK, ArbitrumTokens.LINK, OptimismTokens.LINK],
//   maker: [EthereumTokens.MKR],
//   augur: [EthereumTokens.REP],
//   sai: [EthereumTokens.SAI],
//   sushi: [EthereumTokens.SUSHI, PolygonTokens.SUSHI],
//   // 'true-usd': [EthereumTokens.TUSD],
//   uniswap: [EthereumTokens.UNI],
//   'usd-coin': [
//     EthereumTokens.USDC,
//     PolygonTokens.USDC,
//     AvalancheTokens.USDC,
//     OptimismTokens.USDC,
//     ArbitrumTokens.USDC,
//     ArbitrumTokens['USDC.e'],
//     AvalancheTokens['USDC.e'],
//   ],
//   // 'paxos-standard': [EthereumTokens.USDP],
//   tether: [
//     EthereumTokens.USDT,
//     PolygonTokens.USDT,
//     ArbitrumTokens.USDT,
//     AvalancheTokens.USDT,
//     OptimismTokens.USDT,
//     AvalancheTokens['USDT.e'],
//   ],
//   'wrapped-bitcoin': [
//     EthereumTokens.WBTC,
//     PolygonTokens.WBTC,
//     AvalancheTokens.WBTC,
//     ArbitrumTokens.WBTC,
//     OptimismTokens.WBTC,
//   ],
//   'yearn-finance': [EthereumTokens.YFI],
//   '0x': [EthereumTokens.ZRX],
//   havven: [EthereumTokens.SNX],
//   nusd: [EthereumTokens.sUSD],
//   // 'stasis-eurs': [EthereumTokens.EURS],
//   // seur: [EthereumTokens.sEUR],
//   'defipulse-index': [EthereumTokens.DPI, PolygonTokens.DPI],
//   'curve-dao-token': [EthereumTokens.CRV, PolygonTokens.CRV],
//   'magic-internet-money': [EthereumTokens.MIM],
//   'convex-finance': [EthereumTokens.CVX],
//   'matic-network': [
//     {
//       chain: 'polygon',
//       symbol: 'MATIC',
//       decimals: 18,
//       address: AddressZero,
//     },
//     PolygonTokens.MATIC,
//     PolygonTokens.WMATIC,
//   ],
//   'avalanche-2': [
//     {
//       chain: 'avalanche',
//       symbol: 'AVAX',
//       decimals: 18,
//       address: AddressZero,
//     },
//     AvalancheTokens.WAVAX,
//   ],
//   'kyber-network-crystal': [EthereumTokens.KNC],
//   decentraland: [EthereumTokens.MANA],
//   'binance-usd': [EthereumTokens.BUSD],
//   enjincoin: [EthereumTokens.ENJ],
//   'republic-protocol': [EthereumTokens.REN],
//   'gemini-dollar': [EthereumTokens.GUSD],
//   balancer: [EthereumTokens.BAL, PolygonTokens.BAL],
//   rai: [EthereumTokens.RAI],
//   frax: [EthereumTokens.FRAX, AvalancheTokens.FRAX],
//   'ethereum-name-service': [EthereumTokens.ENS],
//   '1inch': [EthereumTokens['1INCH']],
//   'liquity-usd': [EthereumTokens.LUSD, OptimismTokens.LUSD, ArbitrumTokens.LUSD],
//   aavegotchi: [PolygonTokens.GHST],
//   'coinbase-wrapped-staked-eth': [EthereumTokens.cbETH],
//   'lido-dao': [EthereumTokens.LDO],
//   'benqi-liquid-staked-avax': [AvalancheTokens.sAVAX],
//   'bitcoin-avalanche-bridged-btc-b': [AvalancheTokens['BTC.b']],
//   'wrapped-steth': [EthereumTokens.wstETH, ArbitrumTokens.wstETH],
//   arbitrum: [ArbitrumTokens.ARB],
//   optimism: [OptimismTokens.OP],
//   gmx: [ArbitrumTokens.GMX],
// };
